{"version":3,"sources":["../../../src/js/input-range/slider.jsx"],"names":["Slider","ariaLabelledby","PropTypes","string","ariaControls","classNames","objectOf","isRequired","formatLabel","func","maxValue","number","minValue","onSliderDrag","onSliderKeyDown","percentage","type","value","showValueLabel","bool","props","node","removeDocumentMouseMoveListener","removeDocumentMouseUpListener","removeDocumentTouchEndListener","removeDocumentTouchMoveListener","perc","style","position","left","ownerDocument","addEventListener","handleMouseMove","handleMouseUp","handleTouchMove","handleTouchEnd","removeEventListener","handleTouchUp","addDocumentMouseMoveListener","addDocumentMouseUpListener","event","addDocumentTouchEndListener","addDocumentTouchMoveListener","getStyle","sliderContainer","slider","handleKeyDown","handleMouseDown","handleTouchStart","Component"],"mappings":"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","file":"slider.js","sourcesContent":["import React from 'react';\nimport autobind from 'autobind-decorator';\nimport Label from './label';\n\n/**\n * @ignore\n */\nexport default class Slider extends React.Component {\n  /**\n   * Accepted propTypes of Slider\n   * @override\n   * @return {Object}\n   * @property {String} ariaLabelledby\n   * @property {String} ariaControls\n   * @property {Object} className\n   * @property {Function} formatLabel\n   * @property {Number} maxValue\n   * @property {Number} minValue\n   * @property {Function} onSliderDrag\n   * @property {Function} onSliderKeyDown\n   * @property {Number} percentage\n   * @property {String} type\n   * @property {Number} value\n   * @property {Boolean} showValueLabel\n   */\n  static get propTypes() {\n    return {\n      ariaLabelledby: React.PropTypes.string,\n      ariaControls: React.PropTypes.string,\n      classNames: React.PropTypes.objectOf(React.PropTypes.string).isRequired,\n      formatLabel: React.PropTypes.func,\n      maxValue: React.PropTypes.number,\n      minValue: React.PropTypes.number,\n      onSliderDrag: React.PropTypes.func.isRequired,\n      onSliderKeyDown: React.PropTypes.func.isRequired,\n      percentage: React.PropTypes.number.isRequired,\n      type: React.PropTypes.string.isRequired,\n      value: React.PropTypes.number.isRequired,\n      showValueLabel: React.PropTypes.bool,\n    };\n  }\n\n  /**\n   * @param {Object} props\n   * @param {string} [props.ariaLabelledby]\n   * @param {string} [props.ariaControls]\n   * @param {InputRangeClassNames} props.classNames\n   * @param {Function} [props.formatLabel]\n   * @param {number} [props.maxValue]\n   * @param {number} [props.minValue]\n   * @param {Function} props.onSliderKeyDown\n   * @param {Function} props.onSliderDrag\n   * @param {number} props.percentage\n   * @param {number} props.type\n   * @param {number} props.value\n   * @param {Boolean} props.showValueLabel\n   */\n  constructor(props) {\n    super(props);\n\n    /**\n     * @private\n     * @type {?Component}\n     */\n    this.node = null;\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @return {void}\n   */\n  componentWillUnmount() {\n    this.removeDocumentMouseMoveListener();\n    this.removeDocumentMouseUpListener();\n    this.removeDocumentTouchEndListener();\n    this.removeDocumentTouchMoveListener();\n  }\n\n  /**\n   * @private\n   * @return {Object}\n   */\n  getStyle() {\n    const perc = (this.props.percentage || 0) * 100;\n    const style = {\n      position: 'absolute',\n      left: `${perc}%`,\n    };\n\n    return style;\n  }\n\n  /**\n   * Listen to mousemove event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseMoveListener() {\n    this.removeDocumentMouseMoveListener();\n    this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * Listen to mouseup event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseUpListener() {\n    this.removeDocumentMouseUpListener();\n    this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * Listen to touchmove event\n   * @private\n   * @return {void}\n   */\n  addDocumentTouchMoveListener() {\n    this.removeDocumentTouchMoveListener();\n    this.node.ownerDocument.addEventListener('touchmove', this.handleTouchMove);\n  }\n\n  /**\n   * Listen to touchend event\n   * @private\n   * @return {void}\n   */\n  addDocumentTouchEndListener() {\n    this.removeDocumentTouchEndListener();\n    this.node.ownerDocument.addEventListener('touchend', this.handleTouchEnd);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseMoveListener() {\n    this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseUpListener() {\n    this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentTouchMoveListener() {\n    this.node.ownerDocument.removeEventListener('touchmove', this.handleTouchMove);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentTouchEndListener() {\n    this.node.ownerDocument.removeEventListener('touchend', this.handleTouchUp);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleMouseDown() {\n    this.addDocumentMouseMoveListener();\n    this.addDocumentMouseUpListener();\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleMouseUp() {\n    this.removeDocumentMouseMoveListener();\n    this.removeDocumentMouseUpListener();\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleMouseMove(event) {\n    this.props.onSliderDrag(event, this.props.type);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleTouchStart() {\n    this.addDocumentTouchEndListener();\n    this.addDocumentTouchMoveListener();\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleTouchMove(event) {\n    this.props.onSliderDrag(event, this.props.type);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleTouchEnd() {\n    this.removeDocumentTouchMoveListener();\n    this.removeDocumentTouchEndListener();\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleKeyDown(event) {\n    this.props.onSliderKeyDown(event, this.props.type);\n  }\n\n  /**\n   * @override\n   * @return {JSX.Element}\n   */\n  render() {\n    const style = this.getStyle();\n\n    return (\n      <span\n        className={this.props.classNames.sliderContainer}\n        ref={(node) => { this.node = node; }}\n        style={style}>\n        {\n            this.props.showValueLabel &&\n            <Label\n              classNames={this.props.classNames}\n              formatLabel={this.props.formatLabel}\n              type=\"value\">\n              {this.props.value}\n            </Label>\n        }\n\n        <div\n          aria-labelledby={this.props.ariaLabelledby}\n          aria-controls={this.props.ariaControls}\n          aria-valuemax={this.props.maxValue}\n          aria-valuemin={this.props.minValue}\n          aria-valuenow={this.props.value}\n          className={this.props.classNames.slider}\n          draggable=\"false\"\n          onKeyDown={this.handleKeyDown}\n          onMouseDown={this.handleMouseDown}\n          onTouchStart={this.handleTouchStart}\n          role=\"slider\"\n          tabIndex=\"0\" />\n      </span>\n    );\n  }\n}\n"]}